def s(dna):
  count={}
  for c in dna:
    count[c]=count.setdefault(c, 0)+1
  return count



def dna2rna(dna):
  rna=""
  for symbol in dna:
    if symbol is "T":
      rna=rna+"U"
    else:
      rna=rna+symbol
  return rna


def reverse_complement(dna):
  x=dna[::-1]
  reverse=''
  for symbol in x:
      if symbol == 'A':
          reverse=reverse+'T'
      elif symbol == 'T':
          reverse=reverse+'A'
      elif symbol== 'C':
          reverse=reverse+'G'
      elif symbol== 'G':
          reverse=reverse+'C'
      elif symbol== 'U':
          reverse=reverse+'A'
      else:
        reverse=reverse+symbol
  return reverse

def mendels_law(hom, het, rec):
  total=hom+het+rec
  a=0
  b=0
  sum=0
  for a in range (0,hom+het+rec-1):
    b=b+1
    sum+=b
    a=a+1

  total_allele=sum*4
  i=0
  n=0
  hom_dominant=0
  het_dominant=0
  for i in range (0,hom):
    n=n+1
    hom_dominant=hom_dominant+4*(total-n)
    i+=1
  j=0
  o=0
  for j in range (0,het):
    o=o+1
    het_dominant+=3*(het-o)+2*rec
    j=j+1
  #print(hom_dominant)
  #print(het_dominant)
  #print(total_allele)
  return (het_dominant+hom_dominant)/total_allele

def gc_content(dna_list):
    ans = []
    for i in range(len(dna_list)):
        ans.append(0)
    for i in range(len(dna_list)):
        for element in range(len(dna_list[i])):
            if(dna_list[i][element] == "G" or dna_list[i][element] == "C"):
                ans[i] += 1
    return (ans.index(max(ans)), 100* max(ans) / len(dna_list[ans.index(max(ans))]))


